/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';
import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';
import { LoadingBarHttp } from './loading-bar.http';
/**
 * @param {?} xhrBackend
 * @param {?} requestOptions
 * @param {?} loadingBarService
 * @return {?}
 */
export function httpFactory(xhrBackend, requestOptions, loadingBarService) {
    return new LoadingBarHttp(xhrBackend, requestOptions, loadingBarService);
}
export class LoadingBarHttpModule {
}
LoadingBarHttpModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    HttpModule,
                    LoadingBarModule,
                ],
                exports: [
                    HttpModule,
                    LoadingBarModule,
                ],
                providers: [
                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions, LoadingBarService] },
                ],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWxvYWRpbmctYmFyL2h0dHAvIiwic291cmNlcyI6WyJodHRwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7OztBQUVwRCxNQUFNLFVBQVUsV0FBVyxDQUFDLFVBQXNCLEVBQUUsY0FBOEIsRUFBRSxpQkFBb0M7SUFDdEgsT0FBTyxJQUFJLGNBQWMsQ0FBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDM0UsQ0FBQztBQWVELE1BQU0sT0FBTyxvQkFBb0I7OztZQWJoQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFVBQVU7b0JBQ1YsZ0JBQWdCO2lCQUNqQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixnQkFBZ0I7aUJBQ2pCO2dCQUNELFNBQVMsRUFBRTtvQkFDVCxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDLEVBQUU7aUJBQ2xHO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cE1vZHVsZSwgSHR0cCwgWEhSQmFja2VuZCwgUmVxdWVzdE9wdGlvbnMgfSBmcm9tICdAYW5ndWxhci9odHRwJztcbmltcG9ydCB7IExvYWRpbmdCYXJNb2R1bGUsIExvYWRpbmdCYXJTZXJ2aWNlIH0gZnJvbSAnQG5neC1sb2FkaW5nLWJhci9jb3JlJztcbmltcG9ydCB7IExvYWRpbmdCYXJIdHRwIH0gZnJvbSAnLi9sb2FkaW5nLWJhci5odHRwJztcblxuZXhwb3J0IGZ1bmN0aW9uIGh0dHBGYWN0b3J5KHhockJhY2tlbmQ6IFhIUkJhY2tlbmQsIHJlcXVlc3RPcHRpb25zOiBSZXF1ZXN0T3B0aW9ucywgbG9hZGluZ0JhclNlcnZpY2U6IExvYWRpbmdCYXJTZXJ2aWNlKTogSHR0cCB7XG4gIHJldHVybiBuZXcgTG9hZGluZ0Jhckh0dHAoeGhyQmFja2VuZCwgcmVxdWVzdE9wdGlvbnMsIGxvYWRpbmdCYXJTZXJ2aWNlKTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIEh0dHBNb2R1bGUsXG4gICAgTG9hZGluZ0Jhck1vZHVsZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEh0dHBNb2R1bGUsXG4gICAgTG9hZGluZ0Jhck1vZHVsZSxcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBIdHRwLCB1c2VGYWN0b3J5OiBodHRwRmFjdG9yeSwgZGVwczogW1hIUkJhY2tlbmQsIFJlcXVlc3RPcHRpb25zLCBMb2FkaW5nQmFyU2VydmljZV0gfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZ0Jhckh0dHBNb2R1bGUge31cbiJdfQ==