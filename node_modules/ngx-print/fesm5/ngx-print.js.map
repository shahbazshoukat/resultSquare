{"version":3,"file":"ngx-print.js.map","sources":["ng://ngx-print/lib/ngx-print.directive.ts","ng://ngx-print/lib/ngx-print.module.ts"],"sourcesContent":["import { Directive, HostListener, Input } from \"@angular/core\";\n@Directive({\n  selector: \"button[ngxPrint]\"\n})\nexport class NgxPrintDirective {\n\n  public _printStyle = [];\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() printSectionId: string;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() printTitle: string;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input() useExistingCss = false;\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @Input()\n  set printStyle(values: { [key: string]: { [key: string]: string } }) {\n    for (let key in values) {\n      if (values.hasOwnProperty(key)) {\n      this._printStyle.push((key + JSON.stringify(values[key])).replace(/['\"]+/g, ''));\n      }\n    }\n    this.returnStyleValues();\n  }\n\n/**\n *\n *\n * @returns the string that create the stylesheet which will be injected\n * later within <style></style> tag.\n *\n * -join/replace to transform an array objects to css-styled string\n *\n * @memberof NgxPrintDirective\n */\npublic returnStyleValues() {\n  return `<style> ${this._printStyle.join(' ').replace(/,/g,';')} </style>`;\n  }\n\n  /**\n   *\n   *\n   * @returns html for the given tag\n   *\n   * @memberof NgxPrintDirective\n   */\n  private _styleSheetFile = '';\n\n  /**\n   * @memberof NgxPrintDirective\n   * @param cssList\n   */\n  @Input()\n  set styleSheetFile(cssList: string) {\n    let linkTagFn = cssFileName =>\n      `<link rel=\"stylesheet\" type=\"text/css\" href=\"${cssFileName}\">`;\n    if (cssList.indexOf(',') !== -1) {\n      const valueArr = cssList.split(',');\n      for (let val of valueArr) {\n        this._styleSheetFile = this._styleSheetFile + linkTagFn(val);\n      }\n    } else {\n      this._styleSheetFile = linkTagFn(cssList);\n    }\n  }\n\n  /**\n   * @returns string which contains the link tags containing the css which will\n   * be injected later within <head></head> tag.\n   *\n   */\n  private returnStyleSheetLinkTags() {\n    return this._styleSheetFile;\n  }\n  private getElementTag(tag: keyof HTMLElementTagNameMap): string {\n    const html: string[] = [];\n    const elements = document.getElementsByTagName(tag);\n    for (let index = 0; index < elements.length; index++) {\n      html.push(elements[index].outerHTML);\n    }\n    return html.join('\\r\\n');\n  }\n\n\n  /**\n   *\n   *\n   * @memberof NgxPrintDirective\n   */\n  @HostListener('click')\n  public print(): void {\n    let printContents, popupWin, styles = '', links = '';\n\n    if(this.useExistingCss) {\n      styles = this.getElementTag('style');\n      links = this.getElementTag('link');\n    }\n\n    printContents = document.getElementById(this.printSectionId).innerHTML;\n    popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=auto,width=auto\");\n    popupWin.document.open();\n    popupWin.document.write(`\n      <html>\n        <head>\n          <title>${this.printTitle ? this.printTitle : \"\"}</title>\n          ${this.returnStyleValues()}\n          ${this.returnStyleSheetLinkTags()}\n          ${styles}\n          ${links}\n        </head>\n        <body onload=\"window.print(); setTimeout(()=>{ window.close(); }, 0)\">\n          ${printContents}\n        </body>\n      </html>`);\n    popupWin.document.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPrintDirective } from './ngx-print.directive';\n\n@NgModule({\n  declarations: [NgxPrintDirective],\n  imports: [\n  ],\n  exports: [NgxPrintDirective]\n})\nexport class NgxPrintModule { }\n"],"names":["tslib_1.__values"],"mappings":"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"}
