/**
 * @fileoverview added by tsickle
 * Generated from: src/animation-cache.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isAnimationConfigWithData } from './utils';
var AnimationCache = /** @class */ (function () {
    function AnimationCache() {
        this.cache = new Map();
    }
    /**
     * @param {?} options
     * @return {?}
     */
    AnimationCache.create = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        if (options.useCache) {
            return new AnimationCache();
        }
        return null;
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AnimationCache.prototype.transformOptions = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var path = ((/** @type {?} */ (options))).path;
        if (path && this.cache.has(path)) {
            delete ((/** @type {?} */ (options))).path;
            ((/** @type {?} */ (options))).animationData = this.cache.get(path);
        }
        return options;
    };
    /**
     * @param {?} options
     * @param {?} animationItem
     * @return {?}
     */
    AnimationCache.prototype.set = /**
     * @param {?} options
     * @param {?} animationItem
     * @return {?}
     */
    function (options, animationItem) {
        if (isAnimationConfigWithData(options)) {
            return;
        }
        /** @type {?} */
        var animationData = animationItem['animationData'];
        this.cache.set((/** @type {?} */ (options.path)), animationData);
    };
    return AnimationCache;
}());
export { AnimationCache };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AnimationCache.prototype.cache;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9uLWNhY2hlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWxvdHRpZS8iLCJzb3VyY2VzIjpbInNyYy9hbmltYXRpb24tY2FjaGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFNQSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFcEQ7SUFBQTtRQUNVLFVBQUssR0FBRyxJQUFJLEdBQUcsRUFBbUIsQ0FBQztJQWdDN0MsQ0FBQzs7Ozs7SUE5QlEscUJBQU07Ozs7SUFBYixVQUFjLE9BQXNCO1FBQ2xDLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUNwQixPQUFPLElBQUksY0FBYyxFQUFFLENBQUM7U0FDN0I7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Ozs7O0lBRUQseUNBQWdCOzs7O0lBQWhCLFVBQ0UsT0FBMEQ7O1lBRXBELElBQUksR0FBRyxDQUFDLG1CQUFBLE9BQU8sRUFBMkIsQ0FBQyxDQUFDLElBQUk7UUFDdEQsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDaEMsT0FBTyxDQUFDLG1CQUFBLE9BQU8sRUFBMkIsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNqRCxDQUFDLG1CQUFBLE9BQU8sRUFBMkIsQ0FBQyxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMzRTtRQUNELE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Ozs7OztJQUVELDRCQUFHOzs7OztJQUFILFVBQ0UsT0FBMEQsRUFDMUQsYUFBNEI7UUFFNUIsSUFBSSx5QkFBeUIsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUN0QyxPQUFPO1NBQ1I7O1lBRUssYUFBYSxHQUFHLGFBQWEsQ0FBQyxlQUFlLENBQUM7UUFDcEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsbUJBQUEsT0FBTyxDQUFDLElBQUksRUFBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFDSCxxQkFBQztBQUFELENBQUMsQUFqQ0QsSUFpQ0M7Ozs7Ozs7SUFoQ0MsK0JBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTG90dGllT3B0aW9ucyxcbiAgQW5pbWF0aW9uSXRlbSxcbiAgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEsXG4gIEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoXG59IGZyb20gJy4vc3ltYm9scyc7XG5pbXBvcnQgeyBpc0FuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhIH0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBjbGFzcyBBbmltYXRpb25DYWNoZSB7XG4gIHByaXZhdGUgY2FjaGUgPSBuZXcgTWFwPHN0cmluZywgdW5rbm93bj4oKTtcblxuICBzdGF0aWMgY3JlYXRlKG9wdGlvbnM6IExvdHRpZU9wdGlvbnMpOiBBbmltYXRpb25DYWNoZSB8IG51bGwge1xuICAgIGlmIChvcHRpb25zLnVzZUNhY2hlKSB7XG4gICAgICByZXR1cm4gbmV3IEFuaW1hdGlvbkNhY2hlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB0cmFuc2Zvcm1PcHRpb25zKFxuICAgIG9wdGlvbnM6IEFuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhIHwgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGhcbiAgKTogQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEgfCBBbmltYXRpb25Db25maWdXaXRoUGF0aCB7XG4gICAgY29uc3QgcGF0aCA9IChvcHRpb25zIGFzIEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoKS5wYXRoO1xuICAgIGlmIChwYXRoICYmIHRoaXMuY2FjaGUuaGFzKHBhdGgpKSB7XG4gICAgICBkZWxldGUgKG9wdGlvbnMgYXMgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGgpLnBhdGg7XG4gICAgICAob3B0aW9ucyBhcyBBbmltYXRpb25Db25maWdXaXRoRGF0YSkuYW5pbWF0aW9uRGF0YSA9IHRoaXMuY2FjaGUuZ2V0KHBhdGgpO1xuICAgIH1cbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIHNldChcbiAgICBvcHRpb25zOiBBbmltYXRpb25Db25maWdXaXRoRGF0YSB8IEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoLFxuICAgIGFuaW1hdGlvbkl0ZW06IEFuaW1hdGlvbkl0ZW1cbiAgKTogdm9pZCB7XG4gICAgaWYgKGlzQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEob3B0aW9ucykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBhbmltYXRpb25EYXRhID0gYW5pbWF0aW9uSXRlbVsnYW5pbWF0aW9uRGF0YSddO1xuICAgIHRoaXMuY2FjaGUuc2V0KG9wdGlvbnMucGF0aCEsIGFuaW1hdGlvbkRhdGEpO1xuICB9XG59XG4iXX0=