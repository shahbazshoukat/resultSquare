/**
 * @fileoverview added by tsickle
 * Generated from: src/utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { from, throwError, of } from 'rxjs';
import { map, catchError, shareReplay } from 'rxjs/operators';
/**
 * @param {?} animation
 * @return {?}
 */
export function transformAnimationFilenameToKey(animation) {
    return "animation-" + animation.split('.json')[0];
}
/**
 * @param {?} player
 * @param {?} href
 * @param {?} isSafari
 * @return {?}
 */
export function setPlayerLocationHref(player, href, isSafari) {
    // This is a fix for the mask on Safari/iOS
    // https://github.com/airbnb/lottie-web/issues/1198
    if (isSafari) {
        ((/** @type {?} */ (((/** @type {?} */ (player)))))).setLocationHref(href);
    }
}
/**
 * @param {?} options
 * @param {?} container
 * @param {?} animationCache
 * @return {?}
 */
export function mergeOptionsWithDefault(options, container, animationCache) {
    /** @type {?} */
    var merged = Object.assign({
        container: container,
        renderer: 'svg',
        loop: true,
        autoplay: true
    }, options);
    if (animationCache !== null) {
        return animationCache.transformOptions(merged);
    }
    return merged;
}
/**
 * @return {?}
 */
export function isSafariFactory() {
    // This `try-catch` block will also handle server-side rendering
    // as `navigator` is not accessable there
    try {
        var vendor = navigator.vendor, userAgent = navigator.userAgent;
        return (vendor.indexOf('Apple') > -1 &&
            userAgent.indexOf('CriOS') === -1 &&
            userAgent.indexOf('FxiOS') === -1);
    }
    catch (_a) {
        return false;
    }
}
/**
 * @param {?} options
 * @return {?}
 */
export function isAnimationConfigWithData(options) {
    /** @type {?} */
    var animationData = ((/** @type {?} */ (options))).animationData;
    return animationData !== null && typeof animationData === 'object';
}
/**
 * @param {?} animationCache
 * @param {?} options
 * @param {?} animationItem
 * @return {?}
 */
export function awaitConfigAndCache(animationCache, options, animationItem) {
    if (animationCache === null) {
        return;
    }
    animationItem.addEventListener('config_ready', (/**
     * @return {?}
     */
    function () {
        animationCache.set(options, animationItem);
    }));
}
/**
 * @param {?} player
 * @return {?}
 */
export function streamifyPlayerOrLoader(player) {
    /** @type {?} */
    var playerOrLoader = player();
    if (playerOrLoader instanceof Promise) {
        return from(playerOrLoader).pipe(map((/**
         * @param {?} module
         * @return {?}
         */
        function (module) { return module.default || module; })), catchError((/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.error("\n          Could not retrieve the \"lottie-web\" player, did you provide\n          the \"player\" property correctly?\n          export function playerFactory() {\n            return import('lottie-web');\n          }\n          LottieModule.forRoot({ player: playerFactory })\n        ");
            return throwError(error);
        })), shareReplay(1));
    }
    return of(playerOrLoader);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbG90dGllLyIsInNvdXJjZXMiOlsic3JjL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQWE5RCxNQUFNLFVBQVUsK0JBQStCLENBQUMsU0FBNEI7SUFDMUUsT0FBTyxlQUFhLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFHLENBQUM7QUFDcEQsQ0FBQzs7Ozs7OztBQUVELE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxNQUFvQixFQUFFLElBQVksRUFBRSxRQUFpQjtJQUN6RiwyQ0FBMkM7SUFDM0MsbURBQW1EO0lBQ25ELElBQUksUUFBUSxFQUFFO1FBQ1osQ0FBQyxtQkFBQSxDQUFDLG1CQUFBLE1BQU0sRUFBVyxDQUFDLEVBQStDLENBQUMsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDNUY7QUFDSCxDQUFDOzs7Ozs7O0FBRUQsTUFBTSxVQUFVLHVCQUF1QixDQUNyQyxPQUFnQyxFQUNoQyxTQUFzQixFQUN0QixjQUFxQzs7UUFFL0IsTUFBTSxHQUFzRCxNQUFNLENBQUMsTUFBTSxDQUM3RTtRQUNFLFNBQVMsV0FBQTtRQUNULFFBQVEsRUFBRSxLQUFLO1FBQ2YsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsSUFBSTtLQUNmLEVBQ0QsT0FBTyxDQUNSO0lBRUQsSUFBSSxjQUFjLEtBQUssSUFBSSxFQUFFO1FBQzNCLE9BQU8sY0FBYyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2hEO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQzs7OztBQUVELE1BQU0sVUFBVSxlQUFlO0lBQzdCLGdFQUFnRTtJQUNoRSx5Q0FBeUM7SUFDekMsSUFBSTtRQUNNLElBQUEseUJBQU0sRUFBRSwrQkFBUztRQUN6QixPQUFPLENBQ0wsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDNUIsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDakMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDbEMsQ0FBQztLQUNIO0lBQUMsV0FBTTtRQUNOLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7QUFDSCxDQUFDOzs7OztBQUVELE1BQU0sVUFBVSx5QkFBeUIsQ0FDdkMsT0FBMEQ7O1FBRXBELGFBQWEsR0FBRyxDQUFDLG1CQUFBLE9BQU8sRUFBMkIsQ0FBQyxDQUFDLGFBQWE7SUFDeEUsT0FBTyxhQUFhLEtBQUssSUFBSSxJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsQ0FBQztBQUNyRSxDQUFDOzs7Ozs7O0FBRUQsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxjQUFxQyxFQUNyQyxPQUEwRCxFQUMxRCxhQUE0QjtJQUU1QixJQUFJLGNBQWMsS0FBSyxJQUFJLEVBQUU7UUFDM0IsT0FBTztLQUNSO0lBRUQsYUFBYSxDQUFDLGdCQUFnQixDQUFDLGNBQWM7OztJQUFFO1FBQzdDLGNBQWMsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzdDLENBQUMsRUFBQyxDQUFDO0FBQ0wsQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQW1DOztRQUU3QixjQUFjLEdBQUcsTUFBTSxFQUFFO0lBRS9CLElBQUksY0FBYyxZQUFZLE9BQU8sRUFBRTtRQUNyQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxJQUFJLENBQzlCLEdBQUc7Ozs7UUFBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxPQUFPLElBQUksTUFBTSxFQUF4QixDQUF3QixFQUFDLEVBQ3ZDLFVBQVU7Ozs7UUFBQyxVQUFBLEtBQUs7WUFDZCxPQUFPLENBQUMsS0FBSyxDQUFDLGtTQU9iLENBQUMsQ0FBQztZQUNILE9BQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNCLENBQUMsRUFBQyxFQUNGLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FDZixDQUFDO0tBQ0g7SUFFRCxPQUFPLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUM1QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbSwgdGhyb3dFcnJvciwgb2YsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgY2F0Y2hFcnJvciwgc2hhcmVSZXBsYXkgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7XG4gIExvdHRpZVBsYXllcixcbiAgQW5pbWF0aW9uT3B0aW9ucyxcbiAgQW5pbWF0aW9uRmlsZW5hbWUsXG4gIEFuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhLFxuICBBbmltYXRpb25Db25maWdXaXRoUGF0aCxcbiAgQW5pbWF0aW9uSXRlbSxcbiAgTG90dGllUGxheWVyRmFjdG9yeU9yTG9hZGVyXG59IGZyb20gJy4vc3ltYm9scyc7XG5pbXBvcnQgeyBBbmltYXRpb25DYWNoZSB9IGZyb20gJy4vYW5pbWF0aW9uLWNhY2hlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUFuaW1hdGlvbkZpbGVuYW1lVG9LZXkoYW5pbWF0aW9uOiBBbmltYXRpb25GaWxlbmFtZSk6IHN0cmluZyB7XG4gIHJldHVybiBgYW5pbWF0aW9uLSR7YW5pbWF0aW9uLnNwbGl0KCcuanNvbicpWzBdfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRQbGF5ZXJMb2NhdGlvbkhyZWYocGxheWVyOiBMb3R0aWVQbGF5ZXIsIGhyZWY6IHN0cmluZywgaXNTYWZhcmk6IGJvb2xlYW4pOiB2b2lkIHtcbiAgLy8gVGhpcyBpcyBhIGZpeCBmb3IgdGhlIG1hc2sgb24gU2FmYXJpL2lPU1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vYWlyYm5iL2xvdHRpZS13ZWIvaXNzdWVzLzExOThcbiAgaWYgKGlzU2FmYXJpKSB7XG4gICAgKChwbGF5ZXIgYXMgdW5rbm93bikgYXMgeyBzZXRMb2NhdGlvbkhyZWY6IChocmVmOiBzdHJpbmcpID0+IHZvaWQgfSkuc2V0TG9jYXRpb25IcmVmKGhyZWYpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZU9wdGlvbnNXaXRoRGVmYXVsdChcbiAgb3B0aW9uczogQW5pbWF0aW9uT3B0aW9ucyB8IG51bGwsXG4gIGNvbnRhaW5lcjogSFRNTEVsZW1lbnQsXG4gIGFuaW1hdGlvbkNhY2hlOiBBbmltYXRpb25DYWNoZSB8IG51bGxcbik6IEFuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhIHwgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGgge1xuICBjb25zdCBtZXJnZWQ6IEFuaW1hdGlvbkNvbmZpZ1dpdGhEYXRhIHwgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGggPSBPYmplY3QuYXNzaWduKFxuICAgIHtcbiAgICAgIGNvbnRhaW5lcixcbiAgICAgIHJlbmRlcmVyOiAnc3ZnJyxcbiAgICAgIGxvb3A6IHRydWUsXG4gICAgICBhdXRvcGxheTogdHJ1ZVxuICAgIH0sXG4gICAgb3B0aW9uc1xuICApO1xuXG4gIGlmIChhbmltYXRpb25DYWNoZSAhPT0gbnVsbCkge1xuICAgIHJldHVybiBhbmltYXRpb25DYWNoZS50cmFuc2Zvcm1PcHRpb25zKG1lcmdlZCk7XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTYWZhcmlGYWN0b3J5KCk6IGJvb2xlYW4ge1xuICAvLyBUaGlzIGB0cnktY2F0Y2hgIGJsb2NrIHdpbGwgYWxzbyBoYW5kbGUgc2VydmVyLXNpZGUgcmVuZGVyaW5nXG4gIC8vIGFzIGBuYXZpZ2F0b3JgIGlzIG5vdCBhY2Nlc3NhYmxlIHRoZXJlXG4gIHRyeSB7XG4gICAgY29uc3QgeyB2ZW5kb3IsIHVzZXJBZ2VudCB9ID0gbmF2aWdhdG9yO1xuICAgIHJldHVybiAoXG4gICAgICB2ZW5kb3IuaW5kZXhPZignQXBwbGUnKSA+IC0xICYmXG4gICAgICB1c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTEgJiZcbiAgICAgIHVzZXJBZ2VudC5pbmRleE9mKCdGeGlPUycpID09PSAtMVxuICAgICk7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNBbmltYXRpb25Db25maWdXaXRoRGF0YShcbiAgb3B0aW9uczogQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGggfCBBbmltYXRpb25Db25maWdXaXRoRGF0YVxuKTogb3B0aW9ucyBpcyBBbmltYXRpb25Db25maWdXaXRoRGF0YSB7XG4gIGNvbnN0IGFuaW1hdGlvbkRhdGEgPSAob3B0aW9ucyBhcyBBbmltYXRpb25Db25maWdXaXRoRGF0YSkuYW5pbWF0aW9uRGF0YTtcbiAgcmV0dXJuIGFuaW1hdGlvbkRhdGEgIT09IG51bGwgJiYgdHlwZW9mIGFuaW1hdGlvbkRhdGEgPT09ICdvYmplY3QnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXdhaXRDb25maWdBbmRDYWNoZShcbiAgYW5pbWF0aW9uQ2FjaGU6IEFuaW1hdGlvbkNhY2hlIHwgbnVsbCxcbiAgb3B0aW9uczogQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGggfCBBbmltYXRpb25Db25maWdXaXRoRGF0YSxcbiAgYW5pbWF0aW9uSXRlbTogQW5pbWF0aW9uSXRlbVxuKTogdm9pZCB7XG4gIGlmIChhbmltYXRpb25DYWNoZSA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGFuaW1hdGlvbkl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY29uZmlnX3JlYWR5JywgKCkgPT4ge1xuICAgIGFuaW1hdGlvbkNhY2hlLnNldChvcHRpb25zLCBhbmltYXRpb25JdGVtKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHJlYW1pZnlQbGF5ZXJPckxvYWRlcihcbiAgcGxheWVyOiBMb3R0aWVQbGF5ZXJGYWN0b3J5T3JMb2FkZXJcbik6IE9ic2VydmFibGU8TG90dGllUGxheWVyPiB7XG4gIGNvbnN0IHBsYXllck9yTG9hZGVyID0gcGxheWVyKCk7XG5cbiAgaWYgKHBsYXllck9yTG9hZGVyIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgIHJldHVybiBmcm9tKHBsYXllck9yTG9hZGVyKS5waXBlKFxuICAgICAgbWFwKG1vZHVsZSA9PiBtb2R1bGUuZGVmYXVsdCB8fCBtb2R1bGUpLFxuICAgICAgY2F0Y2hFcnJvcihlcnJvciA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYFxuICAgICAgICAgIENvdWxkIG5vdCByZXRyaWV2ZSB0aGUgXCJsb3R0aWUtd2ViXCIgcGxheWVyLCBkaWQgeW91IHByb3ZpZGVcbiAgICAgICAgICB0aGUgXCJwbGF5ZXJcIiBwcm9wZXJ0eSBjb3JyZWN0bHk/XG4gICAgICAgICAgZXhwb3J0IGZ1bmN0aW9uIHBsYXllckZhY3RvcnkoKSB7XG4gICAgICAgICAgICByZXR1cm4gaW1wb3J0KCdsb3R0aWUtd2ViJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIExvdHRpZU1vZHVsZS5mb3JSb290KHsgcGxheWVyOiBwbGF5ZXJGYWN0b3J5IH0pXG4gICAgICAgIGApO1xuICAgICAgICByZXR1cm4gdGhyb3dFcnJvcihlcnJvcik7XG4gICAgICB9KSxcbiAgICAgIHNoYXJlUmVwbGF5KDEpXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBvZihwbGF5ZXJPckxvYWRlcik7XG59XG4iXX0=