/**
 * @fileoverview added by tsickle
 * Generated from: src/lottie.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { isSafariFactory } from './utils';
import { BaseDirective } from './base.directive';
import { AnimationCache } from './animation-cache';
import { AnimationLoader } from './animation-loader';
import { LottieDirective } from './lottie.directive';
import { LottieComponent } from './lottie.component';
import { LOTTIE_OPTIONS, IS_SAFARI, ANIMATION_CACHE } from './symbols';
export class LottieModule {
    /**
     * @param {?} options
     * @return {?}
     */
    static forRoot(options) {
        return {
            ngModule: LottieModule,
            providers: [
                AnimationLoader,
                {
                    provide: LOTTIE_OPTIONS,
                    useValue: options
                },
                {
                    provide: IS_SAFARI,
                    useFactory: isSafariFactory
                },
                {
                    provide: ANIMATION_CACHE,
                    useFactory: AnimationCache.create,
                    deps: [LOTTIE_OPTIONS]
                }
            ]
        };
    }
}
LottieModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [BaseDirective, LottieDirective, LottieComponent],
                exports: [BaseDirective, LottieDirective, LottieComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG90dGllLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1sb3R0aWUvIiwic291cmNlcyI6WyJzcmMvbG90dGllLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFpQixjQUFjLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQU90RixNQUFNLE9BQU8sWUFBWTs7Ozs7SUFDdkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFzQjtRQUNuQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVk7WUFDdEIsU0FBUyxFQUFFO2dCQUNULGVBQWU7Z0JBQ2Y7b0JBQ0UsT0FBTyxFQUFFLGNBQWM7b0JBQ3ZCLFFBQVEsRUFBRSxPQUFPO2lCQUNsQjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsU0FBUztvQkFDbEIsVUFBVSxFQUFFLGVBQWU7aUJBQzVCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixVQUFVLEVBQUUsY0FBYyxDQUFDLE1BQU07b0JBQ2pDLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQztpQkFDdkI7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUExQkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDdkIsWUFBWSxFQUFFLENBQUMsYUFBYSxFQUFFLGVBQWUsRUFBRSxlQUFlLENBQUM7Z0JBQy9ELE9BQU8sRUFBRSxDQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsZUFBZSxDQUFDO2FBQzNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IGlzU2FmYXJpRmFjdG9yeSB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHsgQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vYmFzZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQW5pbWF0aW9uQ2FjaGUgfSBmcm9tICcuL2FuaW1hdGlvbi1jYWNoZSc7XG5pbXBvcnQgeyBBbmltYXRpb25Mb2FkZXIgfSBmcm9tICcuL2FuaW1hdGlvbi1sb2FkZXInO1xuaW1wb3J0IHsgTG90dGllRGlyZWN0aXZlIH0gZnJvbSAnLi9sb3R0aWUuZGlyZWN0aXZlJztcbmltcG9ydCB7IExvdHRpZUNvbXBvbmVudCB9IGZyb20gJy4vbG90dGllLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb3R0aWVPcHRpb25zLCBMT1RUSUVfT1BUSU9OUywgSVNfU0FGQVJJLCBBTklNQVRJT05fQ0FDSEUgfSBmcm9tICcuL3N5bWJvbHMnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbQmFzZURpcmVjdGl2ZSwgTG90dGllRGlyZWN0aXZlLCBMb3R0aWVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbQmFzZURpcmVjdGl2ZSwgTG90dGllRGlyZWN0aXZlLCBMb3R0aWVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIExvdHRpZU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KG9wdGlvbnM6IExvdHRpZU9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPExvdHRpZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTG90dGllTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIEFuaW1hdGlvbkxvYWRlcixcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IExPVFRJRV9PUFRJT05TLFxuICAgICAgICAgIHVzZVZhbHVlOiBvcHRpb25zXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBJU19TQUZBUkksXG4gICAgICAgICAgdXNlRmFjdG9yeTogaXNTYWZhcmlGYWN0b3J5XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBTklNQVRJT05fQ0FDSEUsXG4gICAgICAgICAgdXNlRmFjdG9yeTogQW5pbWF0aW9uQ2FjaGUuY3JlYXRlLFxuICAgICAgICAgIGRlcHM6IFtMT1RUSUVfT1BUSU9OU11cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==