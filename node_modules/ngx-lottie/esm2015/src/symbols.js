/**
 * @fileoverview added by tsickle
 * Generated from: src/symbols.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/**
 * @record
 */
export function BMEnterFrameEvent() { }
if (false) {
    /** @type {?} */
    BMEnterFrameEvent.prototype.currentTime;
    /** @type {?} */
    BMEnterFrameEvent.prototype.duration;
    /** @type {?} */
    BMEnterFrameEvent.prototype.totalTime;
    /** @type {?} */
    BMEnterFrameEvent.prototype.type;
}
/**
 * @record
 */
export function BMCompleteLoopEvent() { }
if (false) {
    /** @type {?} */
    BMCompleteLoopEvent.prototype.type;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.loop;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.playCount;
    /** @type {?} */
    BMCompleteLoopEvent.prototype.frameMult;
}
/**
 * @record
 */
export function BMCompleteEvent() { }
if (false) {
    /** @type {?} */
    BMCompleteEvent.prototype.type;
    /** @type {?} */
    BMCompleteEvent.prototype.duration;
}
/**
 * @record
 */
export function BMSegmentStartEvent() { }
if (false) {
    /** @type {?} */
    BMSegmentStartEvent.prototype.type;
    /** @type {?} */
    BMSegmentStartEvent.prototype.firstFrame;
    /** @type {?} */
    BMSegmentStartEvent.prototype.totalFrames;
}
/**
 * @record
 */
export function BMDestroyEvent() { }
if (false) {
    /** @type {?} */
    BMDestroyEvent.prototype.target;
    /** @type {?} */
    BMDestroyEvent.prototype.type;
}
/**
 * @record
 */
export function BMRenderFrameErrorEvent() { }
if (false) {
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.type;
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.nativeError;
    /** @type {?} */
    BMRenderFrameErrorEvent.prototype.currentTime;
}
/**
 * @record
 */
export function BMConfigErrorEvent() { }
if (false) {
    /** @type {?} */
    BMConfigErrorEvent.prototype.type;
    /** @type {?} */
    BMConfigErrorEvent.prototype.nativeError;
}
/**
 * @record
 */
export function LottieOptions() { }
if (false) {
    /** @type {?} */
    LottieOptions.prototype.player;
    /** @type {?|undefined} */
    LottieOptions.prototype.useCache;
}
/** @type {?} */
export const IS_SAFARI = new InjectionToken('IsSafari');
/** @type {?} */
export const LOTTIE_OPTIONS = new InjectionToken('LottieOptions');
/** @type {?} */
export const ANIMATION_CACHE = new InjectionToken('AnimationCache');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ltYm9scy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1sb3R0aWUvIiwic291cmNlcyI6WyJzcmMvc3ltYm9scy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFJL0MsdUNBS0M7OztJQUpDLHdDQUFvQjs7SUFDcEIscUNBQWlCOztJQUNqQixzQ0FBa0I7O0lBQ2xCLGlDQUFtQjs7Ozs7QUFHckIseUNBS0M7OztJQUpDLG1DQUFxQjs7SUFDckIsbUNBQWE7O0lBQ2Isd0NBQWtCOztJQUNsQix3Q0FBa0I7Ozs7O0FBR3BCLHFDQUdDOzs7SUFGQywrQkFBaUI7O0lBQ2pCLG1DQUFpQjs7Ozs7QUFHbkIseUNBSUM7OztJQUhDLG1DQUFxQjs7SUFDckIseUNBQW1COztJQUNuQiwwQ0FBb0I7Ozs7O0FBR3RCLG9DQUdDOzs7SUFGQyxnQ0FBc0I7O0lBQ3RCLDhCQUFnQjs7Ozs7QUFHbEIsNkNBSUM7OztJQUhDLHVDQUF5Qjs7SUFDekIsOENBQW1COztJQUNuQiw4Q0FBb0I7Ozs7O0FBR3RCLHdDQUdDOzs7SUFGQyxrQ0FBb0I7O0lBQ3BCLHlDQUFtQjs7Ozs7QUFnRHJCLG1DQUdDOzs7SUFGQywrQkFBb0M7O0lBQ3BDLGlDQUFtQjs7O0FBT3JCLE1BQU0sT0FBTyxTQUFTLEdBQUcsSUFBSSxjQUFjLENBQVUsVUFBVSxDQUFDOztBQUNoRSxNQUFNLE9BQU8sY0FBYyxHQUFHLElBQUksY0FBYyxDQUFnQixlQUFlLENBQUM7O0FBQ2hGLE1BQU0sT0FBTyxlQUFlLEdBQUcsSUFBSSxjQUFjLENBQXdCLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQW5pbWF0aW9uQ2FjaGUgfSBmcm9tICcuL2FuaW1hdGlvbi1jYWNoZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQk1FbnRlckZyYW1lRXZlbnQge1xuICBjdXJyZW50VGltZTogbnVtYmVyO1xuICBkdXJhdGlvbjogbnVtYmVyO1xuICB0b3RhbFRpbWU6IG51bWJlcjtcbiAgdHlwZTogJ2VudGVyRnJhbWUnO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJNQ29tcGxldGVMb29wRXZlbnQge1xuICB0eXBlOiAnbG9vcENvbXBsZXRlJztcbiAgbG9vcDogbnVtYmVyO1xuICBwbGF5Q291bnQ6IG51bWJlcjtcbiAgZnJhbWVNdWx0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQk1Db21wbGV0ZUV2ZW50IHtcbiAgdHlwZTogJ2NvbXBsZXRlJztcbiAgZHVyYXRpb246IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCTVNlZ21lbnRTdGFydEV2ZW50IHtcbiAgdHlwZTogJ3NlZ21lbnRTdGFydCc7XG4gIGZpcnN0RnJhbWU6IG51bWJlcjtcbiAgdG90YWxGcmFtZXM6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCTURlc3Ryb3lFdmVudCB7XG4gIHRhcmdldDogQW5pbWF0aW9uSXRlbTtcbiAgdHlwZTogJ2Rlc3Ryb3knO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJNUmVuZGVyRnJhbWVFcnJvckV2ZW50IHtcbiAgdHlwZTogJ3JlbmRlckZyYW1lRXJyb3InO1xuICBuYXRpdmVFcnJvcjogRXJyb3I7XG4gIGN1cnJlbnRUaW1lOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQk1Db25maWdFcnJvckV2ZW50IHtcbiAgdHlwZTogJ2NvbmZpZ0Vycm9yJztcbiAgbmF0aXZlRXJyb3I6IEVycm9yO1xufVxuXG5leHBvcnQgdHlwZSBMb3R0aWVFdmVudCA9XG4gIHwgQk1FbnRlckZyYW1lRXZlbnRcbiAgfCBCTUNvbXBsZXRlTG9vcEV2ZW50XG4gIHwgQk1Db21wbGV0ZUV2ZW50XG4gIHwgQk1TZWdtZW50U3RhcnRFdmVudFxuICB8IEJNRGVzdHJveUV2ZW50XG4gIHwgQk1SZW5kZXJGcmFtZUVycm9yRXZlbnRcbiAgfCBCTUNvbmZpZ0Vycm9yRXZlbnRcbiAgfCB2b2lkO1xuXG5leHBvcnQgdHlwZSBDYW1lbGl6ZWRBbmltYXRpb25FdmVudE5hbWUgPVxuICB8ICdjb21wbGV0ZSdcbiAgfCAnbG9vcENvbXBsZXRlJ1xuICB8ICdlbnRlckZyYW1lJ1xuICB8ICdzZWdtZW50U3RhcnQnXG4gIHwgJ2NvbmZpZ1JlYWR5J1xuICB8ICdkYXRhUmVhZHknXG4gIHwgJ2RvbUxvYWRlZCdcbiAgfCAnZGVzdHJveSdcbiAgfCAnZXJyb3InO1xuXG5leHBvcnQgdHlwZSBFdmVudHNNYXAgPSB7IFtrZXkgaW4gQ2FtZWxpemVkQW5pbWF0aW9uRXZlbnROYW1lXTogQW5pbWF0aW9uRXZlbnROYW1lIH07XG5cbmV4cG9ydCB0eXBlIEFuaW1hdGlvbkZpbGVuYW1lID0gc3RyaW5nO1xuZXhwb3J0IHR5cGUgQW5pbWF0aW9uRXZlbnROYW1lID0gaW1wb3J0KCdsb3R0aWUtd2ViJykuQW5pbWF0aW9uRXZlbnROYW1lO1xuZXhwb3J0IHR5cGUgQW5pbWF0aW9uSXRlbSA9IGltcG9ydCgnbG90dGllLXdlYicpLkFuaW1hdGlvbkl0ZW07XG5leHBvcnQgdHlwZSBMb3R0aWVQbGF5ZXIgPSB0eXBlb2YgaW1wb3J0KCdsb3R0aWUtd2ViJykuZGVmYXVsdDtcblxuLyoqXG4gKiBUaGlzIGxvb2tzIGFzIGZvbGxvd3NcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgcGxheWVyIGZyb20gJ2xvdHRpZS13ZWInO1xuICogY29uc3QgZmFjdG9yeSA9ICgpID0+IHBsYXllcjtcbiAqL1xudHlwZSBMb3R0aWVQbGF5ZXJGYWN0b3J5ID0gKCkgPT4gdHlwZW9mIGltcG9ydCgnbG90dGllLXdlYicpLmRlZmF1bHQ7XG5cbi8qKlxuICogVGhpcyBsb29rcyBhcyBmb2xsb3dzXG4gKiBAZXhhbXBsZVxuICogY29uc3QgZmFjdG9yeSA9ICgpID0+IGltcG9ydCgnbG90dGllLXdlYicpO1xuICovXG50eXBlIExvdHRpZUxvYWRlciA9ICgpID0+IFByb21pc2U8dHlwZW9mIGltcG9ydCgnbG90dGllLXdlYicpPjtcblxuZXhwb3J0IHR5cGUgTG90dGllUGxheWVyRmFjdG9yeU9yTG9hZGVyID0gTG90dGllUGxheWVyRmFjdG9yeSB8IExvdHRpZUxvYWRlcjtcblxuZXhwb3J0IGludGVyZmFjZSBMb3R0aWVPcHRpb25zIHtcbiAgcGxheWVyOiBMb3R0aWVQbGF5ZXJGYWN0b3J5T3JMb2FkZXI7XG4gIHVzZUNhY2hlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IHR5cGUgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEgPSBpbXBvcnQoJ2xvdHRpZS13ZWInKS5BbmltYXRpb25Db25maWdXaXRoRGF0YTtcbmV4cG9ydCB0eXBlIEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoID0gaW1wb3J0KCdsb3R0aWUtd2ViJykuQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGg7XG5leHBvcnQgdHlwZSBBbmltYXRpb25PcHRpb25zID0gUGFydGlhbDxBbmltYXRpb25Db25maWdXaXRoRGF0YT4gfCBQYXJ0aWFsPEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoPjtcblxuZXhwb3J0IGNvbnN0IElTX1NBRkFSSSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxib29sZWFuPignSXNTYWZhcmknKTtcbmV4cG9ydCBjb25zdCBMT1RUSUVfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxMb3R0aWVPcHRpb25zPignTG90dGllT3B0aW9ucycpO1xuZXhwb3J0IGNvbnN0IEFOSU1BVElPTl9DQUNIRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxBbmltYXRpb25DYWNoZSB8IG51bGw+KCdBbmltYXRpb25DYWNoZScpO1xuIl19