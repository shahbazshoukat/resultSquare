/**
 * @fileoverview added by tsickle
 * Generated from: src/lottie.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Inject, Self, ElementRef, PLATFORM_ID } from '@angular/core';
import { BaseDirective } from './base.directive';
import { AnimationLoader } from './animation-loader';
import { LottieEventsFacade } from './events-facade';
export class LottieDirective extends BaseDirective {
    /**
     * @param {?} platformId
     * @param {?} host
     * @param {?} eventsFacade
     * @param {?} animationLoader
     */
    constructor(platformId, host, eventsFacade, animationLoader) {
        super(platformId, animationLoader);
        this.host = host;
        this.eventsFacade = eventsFacade;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        super.loadAnimation(this.host.nativeElement, this.eventsFacade, this);
    }
}
LottieDirective.decorators = [
    { type: Directive, args: [{
                selector: '[lottie]',
                providers: [LottieEventsFacade]
            },] }
];
/** @nocollapse */
LottieDirective.ctorParameters = () => [
    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
    { type: ElementRef, decorators: [{ type: Self }] },
    { type: LottieEventsFacade, decorators: [{ type: Self }] },
    { type: AnimationLoader }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    LottieDirective.prototype.host;
    /**
     * @type {?}
     * @private
     */
    LottieDirective.prototype.eventsFacade;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG90dGllLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1sb3R0aWUvIiwic291cmNlcyI6WyJzcmMvbG90dGllLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFNckQsTUFBTSxPQUFPLGVBQWdCLFNBQVEsYUFBYTs7Ozs7OztJQUNoRCxZQUN1QixVQUFrQixFQUN2QixJQUE2QixFQUM3QixZQUFnQyxFQUNoRCxlQUFnQztRQUVoQyxLQUFLLENBQUMsVUFBVSxFQUFFLGVBQWUsQ0FBQyxDQUFDO1FBSm5CLFNBQUksR0FBSixJQUFJLENBQXlCO1FBQzdCLGlCQUFZLEdBQVosWUFBWSxDQUFvQjtJQUlsRCxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN4RSxDQUFDOzs7WUFoQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxVQUFVO2dCQUNwQixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQzthQUNoQzs7Ozt5Q0FHSSxNQUFNLFNBQUMsV0FBVztZQVptQixVQUFVLHVCQWEvQyxJQUFJO1lBVEEsa0JBQWtCLHVCQVV0QixJQUFJO1lBWEEsZUFBZTs7Ozs7OztJQVVwQiwrQkFBNkM7Ozs7O0lBQzdDLHVDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBJbmplY3QsIFNlbGYsIEVsZW1lbnRSZWYsIFBMQVRGT1JNX0lEIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuL2Jhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IEFuaW1hdGlvbkxvYWRlciB9IGZyb20gJy4vYW5pbWF0aW9uLWxvYWRlcic7XG5pbXBvcnQgeyBMb3R0aWVFdmVudHNGYWNhZGUgfSBmcm9tICcuL2V2ZW50cy1mYWNhZGUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbG90dGllXScsXG4gIHByb3ZpZGVyczogW0xvdHRpZUV2ZW50c0ZhY2FkZV1cbn0pXG5leHBvcnQgY2xhc3MgTG90dGllRGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoUExBVEZPUk1fSUQpIHBsYXRmb3JtSWQ6IHN0cmluZyxcbiAgICBAU2VsZigpIHByaXZhdGUgaG9zdDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgQFNlbGYoKSBwcml2YXRlIGV2ZW50c0ZhY2FkZTogTG90dGllRXZlbnRzRmFjYWRlLFxuICAgIGFuaW1hdGlvbkxvYWRlcjogQW5pbWF0aW9uTG9hZGVyXG4gICkge1xuICAgIHN1cGVyKHBsYXRmb3JtSWQsIGFuaW1hdGlvbkxvYWRlcik7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBzdXBlci5sb2FkQW5pbWF0aW9uKHRoaXMuaG9zdC5uYXRpdmVFbGVtZW50LCB0aGlzLmV2ZW50c0ZhY2FkZSwgdGhpcyk7XG4gIH1cbn1cbiJdfQ==