/**
 * @fileoverview added by tsickle
 * Generated from: src/utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { from, throwError, of } from 'rxjs';
import { map, catchError, shareReplay } from 'rxjs/operators';
/**
 * @param {?} animation
 * @return {?}
 */
export function transformAnimationFilenameToKey(animation) {
    return `animation-${animation.split('.json')[0]}`;
}
/**
 * @param {?} player
 * @param {?} href
 * @param {?} isSafari
 * @return {?}
 */
export function setPlayerLocationHref(player, href, isSafari) {
    // This is a fix for the mask on Safari/iOS
    // https://github.com/airbnb/lottie-web/issues/1198
    if (isSafari) {
        ((/** @type {?} */ (((/** @type {?} */ (player)))))).setLocationHref(href);
    }
}
/**
 * @param {?} options
 * @param {?} container
 * @param {?} animationCache
 * @return {?}
 */
export function mergeOptionsWithDefault(options, container, animationCache) {
    /** @type {?} */
    const merged = Object.assign({
        container,
        renderer: 'svg',
        loop: true,
        autoplay: true
    }, options);
    if (animationCache !== null) {
        return animationCache.transformOptions(merged);
    }
    return merged;
}
/**
 * @return {?}
 */
export function isSafariFactory() {
    // This `try-catch` block will also handle server-side rendering
    // as `navigator` is not accessable there
    try {
        const { vendor, userAgent } = navigator;
        return (vendor.indexOf('Apple') > -1 &&
            userAgent.indexOf('CriOS') === -1 &&
            userAgent.indexOf('FxiOS') === -1);
    }
    catch (_a) {
        return false;
    }
}
/**
 * @param {?} options
 * @return {?}
 */
export function isAnimationConfigWithData(options) {
    /** @type {?} */
    const animationData = ((/** @type {?} */ (options))).animationData;
    return animationData !== null && typeof animationData === 'object';
}
/**
 * @param {?} animationCache
 * @param {?} options
 * @param {?} animationItem
 * @return {?}
 */
export function awaitConfigAndCache(animationCache, options, animationItem) {
    if (animationCache === null) {
        return;
    }
    animationItem.addEventListener('config_ready', (/**
     * @return {?}
     */
    () => {
        animationCache.set(options, animationItem);
    }));
}
/**
 * @param {?} player
 * @return {?}
 */
export function streamifyPlayerOrLoader(player) {
    /** @type {?} */
    const playerOrLoader = player();
    if (playerOrLoader instanceof Promise) {
        return from(playerOrLoader).pipe(map((/**
         * @param {?} module
         * @return {?}
         */
        module => module.default || module)), catchError((/**
         * @param {?} error
         * @return {?}
         */
        error => {
            console.error(`
          Could not retrieve the "lottie-web" player, did you provide
          the "player" property correctly?
          export function playerFactory() {
            return import('lottie-web');
          }
          LottieModule.forRoot({ player: playerFactory })
        `);
            return throwError(error);
        })), shareReplay(1));
    }
    return of(playerOrLoader);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbG90dGllLyIsInNvdXJjZXMiOlsic3JjL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQWE5RCxNQUFNLFVBQVUsK0JBQStCLENBQUMsU0FBNEI7SUFDMUUsT0FBTyxhQUFhLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNwRCxDQUFDOzs7Ozs7O0FBRUQsTUFBTSxVQUFVLHFCQUFxQixDQUFDLE1BQW9CLEVBQUUsSUFBWSxFQUFFLFFBQWlCO0lBQ3pGLDJDQUEyQztJQUMzQyxtREFBbUQ7SUFDbkQsSUFBSSxRQUFRLEVBQUU7UUFDWixDQUFDLG1CQUFBLENBQUMsbUJBQUEsTUFBTSxFQUFXLENBQUMsRUFBK0MsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM1RjtBQUNILENBQUM7Ozs7Ozs7QUFFRCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE9BQWdDLEVBQ2hDLFNBQXNCLEVBQ3RCLGNBQXFDOztVQUUvQixNQUFNLEdBQXNELE1BQU0sQ0FBQyxNQUFNLENBQzdFO1FBQ0UsU0FBUztRQUNULFFBQVEsRUFBRSxLQUFLO1FBQ2YsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsSUFBSTtLQUNmLEVBQ0QsT0FBTyxDQUNSO0lBRUQsSUFBSSxjQUFjLEtBQUssSUFBSSxFQUFFO1FBQzNCLE9BQU8sY0FBYyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ2hEO0lBRUQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQzs7OztBQUVELE1BQU0sVUFBVSxlQUFlO0lBQzdCLGdFQUFnRTtJQUNoRSx5Q0FBeUM7SUFDekMsSUFBSTtjQUNJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLFNBQVM7UUFDdkMsT0FBTyxDQUNMLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzVCLFNBQVMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2pDLFNBQVMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQ2xDLENBQUM7S0FDSDtJQUFDLFdBQU07UUFDTixPQUFPLEtBQUssQ0FBQztLQUNkO0FBQ0gsQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUseUJBQXlCLENBQ3ZDLE9BQTBEOztVQUVwRCxhQUFhLEdBQUcsQ0FBQyxtQkFBQSxPQUFPLEVBQTJCLENBQUMsQ0FBQyxhQUFhO0lBQ3hFLE9BQU8sYUFBYSxLQUFLLElBQUksSUFBSSxPQUFPLGFBQWEsS0FBSyxRQUFRLENBQUM7QUFDckUsQ0FBQzs7Ozs7OztBQUVELE1BQU0sVUFBVSxtQkFBbUIsQ0FDakMsY0FBcUMsRUFDckMsT0FBMEQsRUFDMUQsYUFBNEI7SUFFNUIsSUFBSSxjQUFjLEtBQUssSUFBSSxFQUFFO1FBQzNCLE9BQU87S0FDUjtJQUVELGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjOzs7SUFBRSxHQUFHLEVBQUU7UUFDbEQsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDN0MsQ0FBQyxFQUFDLENBQUM7QUFDTCxDQUFDOzs7OztBQUVELE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsTUFBbUM7O1VBRTdCLGNBQWMsR0FBRyxNQUFNLEVBQUU7SUFFL0IsSUFBSSxjQUFjLFlBQVksT0FBTyxFQUFFO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLElBQUksQ0FDOUIsR0FBRzs7OztRQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxNQUFNLEVBQUMsRUFDdkMsVUFBVTs7OztRQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ2pCLE9BQU8sQ0FBQyxLQUFLLENBQUM7Ozs7Ozs7U0FPYixDQUFDLENBQUM7WUFDSCxPQUFPLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixDQUFDLEVBQUMsRUFDRixXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ2YsQ0FBQztLQUNIO0lBRUQsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDNUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb20sIHRocm93RXJyb3IsIG9mLCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAsIGNhdGNoRXJyb3IsIHNoYXJlUmVwbGF5IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQge1xuICBMb3R0aWVQbGF5ZXIsXG4gIEFuaW1hdGlvbk9wdGlvbnMsXG4gIEFuaW1hdGlvbkZpbGVuYW1lLFxuICBBbmltYXRpb25Db25maWdXaXRoRGF0YSxcbiAgQW5pbWF0aW9uQ29uZmlnV2l0aFBhdGgsXG4gIEFuaW1hdGlvbkl0ZW0sXG4gIExvdHRpZVBsYXllckZhY3RvcnlPckxvYWRlclxufSBmcm9tICcuL3N5bWJvbHMnO1xuaW1wb3J0IHsgQW5pbWF0aW9uQ2FjaGUgfSBmcm9tICcuL2FuaW1hdGlvbi1jYWNoZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1BbmltYXRpb25GaWxlbmFtZVRvS2V5KGFuaW1hdGlvbjogQW5pbWF0aW9uRmlsZW5hbWUpOiBzdHJpbmcge1xuICByZXR1cm4gYGFuaW1hdGlvbi0ke2FuaW1hdGlvbi5zcGxpdCgnLmpzb24nKVswXX1gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0UGxheWVyTG9jYXRpb25IcmVmKHBsYXllcjogTG90dGllUGxheWVyLCBocmVmOiBzdHJpbmcsIGlzU2FmYXJpOiBib29sZWFuKTogdm9pZCB7XG4gIC8vIFRoaXMgaXMgYSBmaXggZm9yIHRoZSBtYXNrIG9uIFNhZmFyaS9pT1NcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FpcmJuYi9sb3R0aWUtd2ViL2lzc3Vlcy8xMTk4XG4gIGlmIChpc1NhZmFyaSkge1xuICAgICgocGxheWVyIGFzIHVua25vd24pIGFzIHsgc2V0TG9jYXRpb25IcmVmOiAoaHJlZjogc3RyaW5nKSA9PiB2b2lkIH0pLnNldExvY2F0aW9uSHJlZihocmVmKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VPcHRpb25zV2l0aERlZmF1bHQoXG4gIG9wdGlvbnM6IEFuaW1hdGlvbk9wdGlvbnMgfCBudWxsLFxuICBjb250YWluZXI6IEhUTUxFbGVtZW50LFxuICBhbmltYXRpb25DYWNoZTogQW5pbWF0aW9uQ2FjaGUgfCBudWxsXG4pOiBBbmltYXRpb25Db25maWdXaXRoRGF0YSB8IEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoIHtcbiAgY29uc3QgbWVyZ2VkOiBBbmltYXRpb25Db25maWdXaXRoRGF0YSB8IEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoID0gT2JqZWN0LmFzc2lnbihcbiAgICB7XG4gICAgICBjb250YWluZXIsXG4gICAgICByZW5kZXJlcjogJ3N2ZycsXG4gICAgICBsb29wOiB0cnVlLFxuICAgICAgYXV0b3BsYXk6IHRydWVcbiAgICB9LFxuICAgIG9wdGlvbnNcbiAgKTtcblxuICBpZiAoYW5pbWF0aW9uQ2FjaGUgIT09IG51bGwpIHtcbiAgICByZXR1cm4gYW5pbWF0aW9uQ2FjaGUudHJhbnNmb3JtT3B0aW9ucyhtZXJnZWQpO1xuICB9XG5cbiAgcmV0dXJuIG1lcmdlZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2FmYXJpRmFjdG9yeSgpOiBib29sZWFuIHtcbiAgLy8gVGhpcyBgdHJ5LWNhdGNoYCBibG9jayB3aWxsIGFsc28gaGFuZGxlIHNlcnZlci1zaWRlIHJlbmRlcmluZ1xuICAvLyBhcyBgbmF2aWdhdG9yYCBpcyBub3QgYWNjZXNzYWJsZSB0aGVyZVxuICB0cnkge1xuICAgIGNvbnN0IHsgdmVuZG9yLCB1c2VyQWdlbnQgfSA9IG5hdmlnYXRvcjtcbiAgICByZXR1cm4gKFxuICAgICAgdmVuZG9yLmluZGV4T2YoJ0FwcGxlJykgPiAtMSAmJlxuICAgICAgdXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xICYmXG4gICAgICB1c2VyQWdlbnQuaW5kZXhPZignRnhpT1MnKSA9PT0gLTFcbiAgICApO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEoXG4gIG9wdGlvbnM6IEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoIHwgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGFcbik6IG9wdGlvbnMgaXMgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEge1xuICBjb25zdCBhbmltYXRpb25EYXRhID0gKG9wdGlvbnMgYXMgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEpLmFuaW1hdGlvbkRhdGE7XG4gIHJldHVybiBhbmltYXRpb25EYXRhICE9PSBudWxsICYmIHR5cGVvZiBhbmltYXRpb25EYXRhID09PSAnb2JqZWN0Jztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF3YWl0Q29uZmlnQW5kQ2FjaGUoXG4gIGFuaW1hdGlvbkNhY2hlOiBBbmltYXRpb25DYWNoZSB8IG51bGwsXG4gIG9wdGlvbnM6IEFuaW1hdGlvbkNvbmZpZ1dpdGhQYXRoIHwgQW5pbWF0aW9uQ29uZmlnV2l0aERhdGEsXG4gIGFuaW1hdGlvbkl0ZW06IEFuaW1hdGlvbkl0ZW1cbik6IHZvaWQge1xuICBpZiAoYW5pbWF0aW9uQ2FjaGUgPT09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBhbmltYXRpb25JdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbmZpZ19yZWFkeScsICgpID0+IHtcbiAgICBhbmltYXRpb25DYWNoZS5zZXQob3B0aW9ucywgYW5pbWF0aW9uSXRlbSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyZWFtaWZ5UGxheWVyT3JMb2FkZXIoXG4gIHBsYXllcjogTG90dGllUGxheWVyRmFjdG9yeU9yTG9hZGVyXG4pOiBPYnNlcnZhYmxlPExvdHRpZVBsYXllcj4ge1xuICBjb25zdCBwbGF5ZXJPckxvYWRlciA9IHBsYXllcigpO1xuXG4gIGlmIChwbGF5ZXJPckxvYWRlciBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICByZXR1cm4gZnJvbShwbGF5ZXJPckxvYWRlcikucGlwZShcbiAgICAgIG1hcChtb2R1bGUgPT4gbW9kdWxlLmRlZmF1bHQgfHwgbW9kdWxlKSxcbiAgICAgIGNhdGNoRXJyb3IoZXJyb3IgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBcbiAgICAgICAgICBDb3VsZCBub3QgcmV0cmlldmUgdGhlIFwibG90dGllLXdlYlwiIHBsYXllciwgZGlkIHlvdSBwcm92aWRlXG4gICAgICAgICAgdGhlIFwicGxheWVyXCIgcHJvcGVydHkgY29ycmVjdGx5P1xuICAgICAgICAgIGV4cG9ydCBmdW5jdGlvbiBwbGF5ZXJGYWN0b3J5KCkge1xuICAgICAgICAgICAgcmV0dXJuIGltcG9ydCgnbG90dGllLXdlYicpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBMb3R0aWVNb2R1bGUuZm9yUm9vdCh7IHBsYXllcjogcGxheWVyRmFjdG9yeSB9KVxuICAgICAgICBgKTtcbiAgICAgICAgcmV0dXJuIHRocm93RXJyb3IoZXJyb3IpO1xuICAgICAgfSksXG4gICAgICBzaGFyZVJlcGxheSgxKVxuICAgICk7XG4gIH1cblxuICByZXR1cm4gb2YocGxheWVyT3JMb2FkZXIpO1xufVxuIl19