{"version":3,"sources":["webpack:///./src/app/services/board.service.ts","webpack:///./src/app/services/class.service.ts","webpack:///./src/app/services/result.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {Board} from '../models/board.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BoardService {\r\n\r\n  constructor (private http: HttpClient) {}\r\n\r\n  addBoard(\r\n    _id: null,\r\n    key: string,\r\n    title: string,\r\n    province: string,\r\n    city: string,\r\n    examTypes: object[],\r\n    sections: string[],\r\n    type: string,\r\n    webUrl: string,\r\n    resultUrl: string,\r\n    tags: string[]\r\n  ): Observable<any> {\r\n    const boardData: Board = {\r\n      _id: _id,\r\n      key: title.replace(/\\s/g, '-'),\r\n      title: title,\r\n      province: province,\r\n      city: city,\r\n      examTypes: examTypes,\r\n      sections: sections,\r\n      type: type,\r\n      webUrl: webUrl,\r\n      resultUrl: resultUrl,\r\n      tags: tags\r\n    };\r\n    return this.http.post<{success: boolean, message: string, data: any}>('/api/board', boardData);\r\n  }\r\n\r\n  getAllBoardes(): Observable<any> {\r\n    return this.http.get<{success: boolean, message: string, data: any}>( '/api/boards');\r\n  }\r\n\r\n  getBoardById(boardId: string): Observable<any> {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/board/' + boardId);\r\n  }\r\n\r\n  getBoardByKey(boardKey: string): Observable<any> {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/getBoard/' + boardKey);\r\n  }\r\n\r\n  getBoardBySectionTitle(sectionTitle: string): Observable<any> {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/getBoardBySectionTitle/' + sectionTitle);\r\n  }\r\n\r\n  updateBoard(\r\n    boardId: string,\r\n    key: string,\r\n    title: string,\r\n    province: string,\r\n    city: string,\r\n    examTypes: object[],\r\n    sections: string[],\r\n    type: string,\r\n    webUrl: string,\r\n    resultUrl: string,\r\n    tags: string[]\r\n  ): Observable<any> {\r\n    const update = {\r\n      key: title.replace(/\\s/g, '-'),\r\n      title: title,\r\n      province: province,\r\n      city: city,\r\n      examTypes: examTypes,\r\n      sections: sections,\r\n      type: type,\r\n      webUrl: webUrl,\r\n      resultUrl: resultUrl,\r\n      tags: tags\r\n     };\r\n\r\n     return this.http.put<{success: boolean, message: string, data: any}>('/api/updateBoard/' + boardId, update);\r\n  }\r\n\r\n\r\n  deleteBoard(boardId: string): Observable<any> {\r\n    return this.http.delete<{success: boolean, message: string, data: any}>('/api/deleteBoard/' + boardId);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {Class} from '../models/class.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ClassService {\r\n\r\n  constructor (private http: HttpClient) {}\r\n\r\n  addClass(title: string, type: string) {\r\n    const classData: any = { title: title, type: type};\r\n    return this.http.post<{success: boolean, message: string, data: any}>('/api/section', classData);\r\n  }\r\n\r\n  getAllClasses() {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/sections');\r\n  }\r\n\r\n  getClassById(classId: string) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/section' + classId);\r\n  }\r\n\r\n  getClassByTitle(title: string) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/getSection' + title);\r\n  }\r\n\r\n  updateClass( classId: string, title: string, type: string ) {\r\n    const update = { title: title, type: type };\r\n    return this.http.put<{success: boolean, message: string, data: any}>('/api/updateSection' + classId, update);\r\n  }\r\n\r\n\r\n  deleteClass(classId: string) {\r\n    return this.http.delete<{success: boolean, message: string, data: any}>('/api/deleteSection' + classId);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {Result} from '../models/result.model';\r\nimport { Injectable } from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ResultService {\r\n\r\n  constructor (private http: HttpClient) {}\r\n\r\n  addResult(\r\n    _id: string,\r\n    status: boolean,\r\n    section: string,\r\n    board: string,\r\n    year: string,\r\n    announceDate: string,\r\n    examType: number,\r\n    resultUrl: string,\r\n    tags: string[]\r\n  ) {\r\n    const resultData: Result = {\r\n      _id: _id,\r\n      status: status,\r\n      sectionId: section,\r\n      boardId: board,\r\n      year: year,\r\n      announceDate: announceDate,\r\n      examType: examType,\r\n      resultUrl: resultUrl,\r\n      tags: tags\r\n    };\r\n    return this.http.post<{success: boolean, message: string, data: any}>('/api/result', resultData);\r\n  }\r\n\r\n  getAllResultes() {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/results');\r\n  }\r\n\r\n  getResultById(resultId: string) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>('/api/result/' + resultId);\r\n  }\r\n\r\n  getResultYears(selectedClass, selectedBoardKey) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>(`/api/result-year/${selectedClass}/${selectedBoardKey}`);\r\n  }\r\n\r\n  getResult(section, board, year, exam) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>(`/api/result/${section}/${board}/${year}/${exam}`);\r\n  }\r\n\r\n  getResultsByBoardKey(boardKey) {\r\n    return this.http.get<{success: boolean, message: string, data: any}>(`/api/results/board/${boardKey}`);\r\n  }\r\n\r\n  updateResult(\r\n    resultId: string,\r\n    status: boolean,\r\n    section: string,\r\n    boardId: string,\r\n    year: string,\r\n    announceDate: string,\r\n    examType: number,\r\n    resultUrl: string,\r\n    tags: string[]\r\n  ) {\r\n    const update = {\r\n      status: status,\r\n      sectionId: section,\r\n      boardId: boardId,\r\n      year: year,\r\n      announceDate: announceDate,\r\n      examType: examType,\r\n      resultUrl: resultUrl,\r\n      tags: tags\r\n     };\r\n      return this.http.put<{success: boolean, message: string, data: any}>('/api/updateResult/' + resultId, update);\r\n  }\r\n\r\n\r\n  deleteResult(resultId: string) {\r\n    return this.http.delete<{success: boolean, message: string, data: any}>('/api/deleteResult/' + resultId);\r\n  }\r\n\r\n  changeResultStatus(resultId: string, value: boolean) {\r\n    const update = {status: value};\r\n    return this.http.put<{success: boolean, message: string, data: any}>('/api/updateStatus/' + resultId, update);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}